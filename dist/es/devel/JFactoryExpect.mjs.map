{"version":3,"file":"JFactoryExpect.mjs","sources":["../../../src/JFactoryExpect.mjs"],"sourcesContent":["import { JFACTORY_DEV } from \"./jFactory-env.mjs\";\nimport { JFACTORY_ERR_INVALID_VALUE } from \"./JFactoryError.mjs\";\nimport { helper_isNumber, helper_isPlainObject, helper_isString } from \"./jFactory-helpers.mjs\";\nimport { jFactoryBootstrap_onBoot } from \"./jFactory-bootstrap.mjs\";\nimport { jFactoryBootstrap_expected } from \"./jFactory-bootstrap.mjs\";\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryExpect\n// ---------------------------------------------------------------------------------------------------------------------\n// A small input/output validation tool\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Alpha, Draft, HasSideEffects\n// ---------------------------------------------------------------------------------------------------------------------\n\n/**\n * @return {*|JFactoryExpect}\n */\nexport function JFactoryExpect(label, value) {\n    JFACTORY_DEV && jFactoryBootstrap_expected();\n    if (new.target) {\n        this.label = label;\n        this.value = value;\n    } else {\n        return new JFactoryExpect(label, value)\n    }\n}\n\nconst error = function jFactoryThrow(label, value, message) {\n    throw new JFACTORY_ERR_INVALID_VALUE({\n        target: label,\n        reason: message,\n        given: value\n    })\n};\n\nconst staticMethods = {\n    /**\n     * @method notUndefined\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method notUndefined\n     * @memberOf JFactoryExpect\n     */\n    notUndefined(label, value) {\n        if (value === undefined) {\n            error(label, value, \"cannot be undefined\")\n        }\n        return true\n    },\n\n    /**\n     * @method notEmptyString\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method notEmptyString\n     * @memberOf JFactoryExpect\n     */\n    notEmptyString(label, value) {\n        if (value === \"\") {\n            error(label, value, \"cannot be empty string\")\n        }\n        return true\n    },\n\n    /**\n     * @method notFalsy\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method notFalsy\n     * @memberOf JFactoryExpect\n     */\n    notFalsy(label, value) {\n        if (!value) {\n            error(label, value, 'cannot be a falsy value (undefined, null, NaN, 0, \"\")')\n        }\n        return true\n    },\n\n    /**\n     * @method validSpaces\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method validSpaces\n     * @memberOf JFactoryExpect\n     */\n    validSpaces(label, value) {\n        if (!value.replace || value.replace(/\\s+/g, \" \").trim() !== value) {\n            error(label, value, \"invalid space delimiters\")\n        }\n        return true\n    },\n\n    /**\n     * @method matchReg\n     * @memberOf JFactoryExpect#\n     * @param {RegExp} reg\n     * @return JFactoryExpect\n     */\n    /**\n     * @method matchReg\n     * @memberOf JFactoryExpect\n     */\n    matchReg(label, value, reg) {\n        if (!reg.test(value)) {\n            error(label, value, 'string \"' + value + '\" must match ' + reg)\n        }\n        return true\n    },\n\n    /**\n     * @method type\n     * @memberOf JFactoryExpect#\n     * @param {...*} expected\n     * @return JFactoryExpect\n     */\n    /**\n     * @method type\n     * @memberOf JFactoryExpect\n     */\n    type(label, value, ...expected) {\n        let name, ok = false;\n        for (let constructor of expected) {\n            if (constructor === null) {\n                name = \"Null\"\n            } else if (\"name\" in constructor) {\n                name = constructor.name\n            }\n            let test = staticMethods[\"type\" + name];\n            if (test) {\n                try {ok = test(label, value/*, e*/)} catch (e) {}\n            } else {\n                ok = value instanceof constructor\n            }\n            if (ok) break\n        }\n        if (!ok) {\n            error(label, value, \"must be an instance of [\" + expected.map(e => e.name).join(\", \") + \"]\")\n        }\n        return true\n    },\n\n    /**\n     * @method typeNull\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method typeNull\n     * @memberOf JFactoryExpect\n     */\n    typeNull(label, value) {\n        if (value !== null) {\n            error(label, value, \"must be null\")\n        }\n        return true\n    },\n\n    /**\n     * @method typeBoolean\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method typeBoolean\n     * @memberOf JFactoryExpect\n     */\n    typeBoolean(label, value) {\n        if (value !== true && value !== false) {\n            error(label, value, \"must be a boolean\")\n        }\n        return true\n    },\n\n    /**\n     * @method typeString\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method typeString\n     * @memberOf JFactoryExpect\n     */\n    typeString(label, value) {\n        if (!helper_isString(value)) {\n            error(label, value, \"must be a string\")\n        }\n        return true\n    },\n\n    /**\n     * @method typeNumber\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method typeNumber\n     * @memberOf JFactoryExpect\n     */\n    typeNumber(label, value) {\n        if (!helper_isNumber(value)) {\n            error(label, value, \"must be a number\")\n        }\n        return true\n    },\n\n    /**\n     * @method typeFunction\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method typeFunction\n     * @memberOf JFactoryExpect\n     */\n    typeFunction(label, value) {\n        if (!(typeof value === \"function\")) {\n            error(label, value, \"must be a function\")\n        }\n        return true\n    },\n\n    /**\n     * @method typePlainObject\n     * @memberOf JFactoryExpect#\n     * @return JFactoryExpect\n     */\n    /**\n     * @method typePlainObject\n     * @memberOf JFactoryExpect\n     */\n    typePlainObject(label, value) {\n        if (!helper_isPlainObject(value)) {\n            error(label, value, \"must be a plain object\")\n        }\n        return true\n    },\n\n    /**\n     * @method equal\n     * @memberOf JFactoryExpect#\n     * @param {*} expected\n     * @return JFactoryExpect\n     */\n    /**\n     * @method equal\n     * @memberOf JFactoryExpect\n     */\n    equal(label, value, ...expected) {\n        let ok = false;\n        for (let e of expected) {\n            if ((ok = value === e)) break\n        }\n        if (!ok) {\n            error(label, value, \"must be one of [\" + expected + \"]\")\n        }\n        return true;\n    },\n\n    /**\n     * @method equalIn\n     * @memberOf JFactoryExpect#\n     * @param {Array|Object} expected\n     * @return JFactoryExpect\n     */\n    /**\n     * @method equalIn\n     * @memberOf JFactoryExpect\n     */\n    equalIn(label, value, expected) {\n        if (!Array.isArray(expected)) {\n            expected = Object.values(expected)\n        }\n        if (!expected.includes(value)) {\n            error(label, value, \"must be one from [\" + expected.join(\", \") + \"]\")\n        }\n        return true\n    },\n\n    /**\n     * @method properties\n     * @memberOf JFactoryExpect#\n     * @param {Array} expected\n     * @return JFactoryExpect\n     */\n    /**\n     * @method properties\n     * @memberOf JFactoryExpect\n     */\n    properties(label, value, expected) {\n        for (let name of Object.getOwnPropertyNames(value)) {\n            JFactoryExpect(label + ', property name \"' + name + '\"', name).equalIn(expected)\n        }\n        return true\n    },\n\n    /**\n     * @method writable\n     * @memberOf JFactoryExpect#\n     * @param {String} key\n     * @return JFactoryExpect\n     */\n    /**\n     * @method writable\n     * @memberOf JFactoryExpect\n     */\n    writable(label, value, key) {\n        if (!Object.getOwnPropertyDescriptor(value, key).writable) {\n            error(label, value, \"must be writable\")\n        }\n        return true\n    },\n\n    /**\n     * @method notWritable\n     * @memberOf JFactoryExpect#\n     * @param {String} key\n     * @return JFactoryExpect\n     */\n    /**\n     * @method notWritable\n     * @memberOf JFactoryExpect\n     */\n    notWritable(label, value, key) {\n        if (Object.getOwnPropertyDescriptor(value, key).writable) {\n            error(label, value, \"must not be writable\")\n        }\n        return true\n    },\n\n    /**\n     * @method enumerable\n     * @memberOf JFactoryExpect#\n     * @param {String} key\n     * @return JFactoryExpect\n     */\n    /**\n     * @method enumerable\n     * @memberOf JFactoryExpect\n     */\n    enumerable(label, value, key) {\n        if (!Object.prototype.propertyIsEnumerable.call(value, key)) {\n            error(label, value, \"must be enumerable\")\n        }\n        return true\n    },\n\n    /**\n     * @method notEnumerable\n     * @memberOf JFactoryExpect#\n     * @param {String} key\n     * @return JFactoryExpect\n     */\n    /**\n     * @method notEnumerable\n     * @memberOf JFactoryExpect\n     */\n    notEnumerable(label, value, key) {\n        if (Object.prototype.propertyIsEnumerable.call(value, key)) {\n            error(label, value, \"must not be enumerable\")\n        }\n        return true\n    },\n\n    /**\n     * @method configurable\n     * @memberOf JFactoryExpect#\n     * @param {String} key\n     * @return JFactoryExpect\n     */\n    /**\n     * @method configurable\n     * @memberOf JFactoryExpect\n     */\n    configurable(label, value, key) {\n        if (!Object.getOwnPropertyDescriptor(value, key).configurable) {\n            error(label, value, \"must be configurable\")\n        }\n        return true\n    },\n\n    /**\n     * @method notConfigurable\n     * @memberOf JFactoryExpect#\n     * @param {String} key\n     * @return JFactoryExpect\n     */\n    /**\n     * @method notConfigurable\n     * @memberOf JFactoryExpect\n     */\n    notConfigurable(label, value, key) {\n        if (Object.getOwnPropertyDescriptor(value, key).configurable) {\n            error(label, value, \"must not be configurable\")\n        }\n        return true\n    },\n\n    /**\n     * @method reservedProperty\n     * @memberOf JFactoryExpect#\n     * @param {String} key\n     * @return JFactoryExpect\n     */\n    /**\n     * @method reservedProperty\n     * @memberOf JFactoryExpect\n     */\n    reservedProperty(label, value, key) {\n        if (key in value) {\n            error(label, value, \"is a reserved property\")\n        }\n        return true\n    }\n};\n\njFactoryBootstrap_onBoot(function() {\n    Object.assign(JFactoryExpect, staticMethods);\n    // Generate members from static methods\n    for (const name of Object.getOwnPropertyNames(staticMethods)) {\n        JFactoryExpect.prototype[name] =\n            function callStatic(...args) {\n                JFactoryExpect[name](this.label, this.value, ...args);\n                return this\n            }\n    }\n});"],"names":[],"mappings":"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"}