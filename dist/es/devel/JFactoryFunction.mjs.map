{"version":3,"file":"JFactoryFunction.mjs","sources":["../../../src/JFactoryFunction.mjs"],"sourcesContent":["import { JFACTORY_DEV, JFACTORY_LOG } from \"./jFactory-env.mjs\";\nimport { JFACTORY_ERR_INVALID_CALL } from \"./JFactoryError.mjs\";\nimport { JFactoryExpect } from \"./JFactoryExpect.mjs\";\nimport { helper_setFunctionName } from \"./jFactory-helpers.mjs\";\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryFunctionComposer\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryFunctionComposer {\n\n    constructor() {\n        this.handlers = Object.create(null);\n    }\n\n    * [Symbol.iterator](handlerGroups = []) {\n\n        if (!handlerGroups.length) {\n            handlerGroups = Object.keys(this.handlers)\n        }\n        if (!handlerGroups.length) {\n            handlerGroups = [\"default\"]\n        }\n\n        for (let handlerGroup of handlerGroups) {\n            if (handlerGroup in this.handlers) {\n                yield* this.handlers[handlerGroup]\n            }\n        }\n    }\n\n    /** @return {JFactoryFunctionComposer} */\n    first(handlerGroup, handler) {\n        if (arguments.length === 1) {\n            [handlerGroup, handler] = [\"default\", handlerGroup]\n        }\n        (this.handlers[handlerGroup] || (this.handlers[handlerGroup] = [])).unshift(handler);\n        return this\n    }\n\n    /** @return {JFactoryFunctionComposer} */\n    last(handlerGroup, handler) {\n        if (arguments.length === 1) {\n            [handlerGroup, handler] = [\"default\", handlerGroup]\n        }\n        (this.handlers[handlerGroup] || (this.handlers[handlerGroup] = [])).push(handler);\n        return this\n    }\n\n    /** @return {(function(): *) & {composer: JFactoryFunctionComposer}} */\n    compose(...handlerGroups) {\n        let composer = this;\n        let composite = function() {\n            // !!!!--!!!!--!!!!--!!!!--!!!!--!!!!--!!!!--!!!! //\n            //                                                //\n            //                wrapped function                //\n            //                                                //\n            //    You should Blackbox JFactoryFunction.mjs    //\n            //    to simplify debugging                       //\n            //                                                //\n            // !!!!--!!!!--!!!!--!!!!--!!!!--!!!!--!!!!--!!!! //\n            let context = {\n                canceled: false,\n                parameters: Array.from(arguments),\n                result: undefined\n            };\n            let iterator = composer[Symbol.iterator](handlerGroups);\n            let iteration = iterator.next();\n            return JFactoryFunctionComposer.composite_iterator(\n                this /* preserve call scope */, context, iteration, iterator)\n        };\n        composite.composer = composer;\n        return composite;\n    }\n\n    // SPEC: Composite functions returns promise *only* if at least\n    // one handler returns a promise (async function or promise return)\n    // So we cannot just iterate using an \"await for of\"\n    static composite_iterator(scope, context, iteration, handlers) {\n        let handler,\n            result;\n\n        while (!context.canceled && !iteration.done) {\n            handler = iteration.value;\n            if (scope) {\n                result = handler.call(scope, context, ...context.parameters)\n            } else {\n                result = handler(context, ...context.parameters)\n            }\n            iteration = handlers.next(); // prepares next iteration to know if \"done\"\n            if (result instanceof Promise) {\n                if (iteration.done\n                    // case of last handler returning a promise\n                    // #limitation# now way to detect if the promise is the returned value or an \"await\"\n                    // (we don't want to change the value of context.result during a pending handler)\n                    // => native Promise are always chained\n                    && result.constructor !== Promise) {\n                    context.result = result // we can safely set the new result\n                } else {\n                    return result.then(helper_setFunctionName(\n                        [handler.name, \"[compositeAsyncHandler]\"].filter(Boolean).join(\" \"),\n                        function(value) {\n                            context.result = value;\n                            return JFactoryFunctionComposer.composite_iterator(scope, context, iteration, handlers)\n                        })\n                    )\n                }\n            } else {\n                context.result = result\n            }\n        }\n        return context.result\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryFunctionExpirable - Expirable Function Pattern\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport function jFactoryFunctionExpirable(originalHandler) {\n    return new JFactoryFunctionExpirable(originalHandler).compose()\n}\n\nexport class JFactoryFunctionExpirable {\n\n    constructor(originalHandler) {\n        this.originalHandler = originalHandler;\n        this.expiredCalls = 0;\n        this.composer = new JFactoryFunctionComposer;\n\n        let isExpired = this.composer.compose(\"conditions\");\n        let expirable = this;\n        let expired;\n\n        // cannot use a real accessor here (conditions can be scoped, so isExpired too)\n        this.isExpired = scope => expired || isExpired.call(scope) || false;\n        this.setExpired = value => expired = value ?\n            value instanceof Error ? value : new JFACTORY_ERR_INVALID_CALL({\n                target: this.originalHandler,\n                reason: \"manually expired\"\n            }) : Boolean(this.expiredCalls = 0);\n\n        this.addExpireCondition = function(condition) {\n            this.composer.last(\"conditions\", function(context) {\n                let done = function(result) {\n                    if (JFACTORY_DEV) {\n                        JFactoryExpect(\"JFactoryFunctionExpirable.addExpireCondition(), result\", result)\n                            .type(Boolean, Error)\n                    }\n                    return expirable.setExpired(result ?\n                        (context.canceled = true) &&\n                        (result instanceof Error ?\n                            result :\n                            new JFACTORY_ERR_INVALID_CALL({\n                                target: expirable.originalHandler,\n                                reason: \"conditionally expired\",\n                                condition\n                            })\n                        ) : false\n                    )\n                };\n                let result = condition.apply(this, context.parameters);\n                return result instanceof Promise ? result.then(done) : done(result);\n            })\n        };\n    }\n\n    compose() {\n        let expirable = this;\n        let composite = function() {\n            let isExpired = expirable.isExpired(this);\n            let call = expirable.constructor.call.bind(undefined, expirable, this, arguments);\n            return isExpired instanceof Promise ? isExpired.then(call) : call(isExpired);\n        };\n        return Object.assign(composite, {\n            expirable: this,\n            isExpired: f => this.isExpired(f),\n            setExpired: f => this.setExpired(f),\n            addExpireCondition: f => {this.addExpireCondition(f); return composite}\n        });\n    }\n\n    static call(expirable, scope, args, isExpired) {\n        return isExpired ? expirable.onExpired(isExpired) : expirable.onNotExpired(scope, args);\n    }\n\n    onExpired(expired) {\n        if (this.expiredCalls < JFactoryFunctionExpirable.MaxWarningExpiration) {\n            this.expiredCalls++;\n            if (JFACTORY_LOG) {\n                console.warn(...new JFACTORY_ERR_INVALID_CALL({\n                    ...expired.$data,\n                    reason: expired.$data.reason\n                        + \"; expiredCalls=\"\n                        + this.expiredCalls\n                        + (this.expiredCalls === JFactoryFunctionExpirable.MaxWarningExpiration\n                            ? \"; Max Warning Exceeded\" : \"\")\n                }));\n            }\n        }\n        return expired\n    }\n\n    onNotExpired(scope, args) {\n        return this.originalHandler.apply(scope, args)\n    }\n}\n\nJFactoryFunctionExpirable.MaxWarningExpiration = 10;\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryFunctionConditional - Conditional Function Pattern\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport function jFactoryFunctionConditional(originalHandler) {\n    return new JFactoryFunctionConditional(originalHandler).compose()\n}\n\nexport class JFactoryFunctionConditional {\n\n    constructor(originalHandler) {\n        this.originalHandler = originalHandler;\n        this.composer = new JFactoryFunctionComposer;\n        this.composer.first(\"original\", helper_setFunctionName(\n            [originalHandler.name, \"[condition]\"].filter(Boolean).join(\" \"),\n            function(context) {\n                return originalHandler.apply(this, context.parameters);\n            })\n        );\n    }\n\n    compose() {\n        let composite = this.composer.compose(\"conditions\", \"original\");\n        return Object.assign(composite, {\n            conditional: this,\n            addCondition: f => {this.addCondition(f); return composite}\n        });\n    }\n\n    addCondition(condition) {\n        this.composer.last(\"conditions\", function(context) {\n            let handle = function(result) {\n                if (JFACTORY_DEV) {\n                    JFactoryExpect(\"JFactoryFunctionConditional.addCondition(), result\", result)\n                        .typeBoolean();\n                }\n                !result && (context.canceled = true);\n            };\n            let result = condition.apply(this, context.parameters);\n            return result instanceof Promise ? result.then(handle) : handle(result);\n        })\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryFunctionWrappable - Wrappable Function Pattern\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport function jFactoryFunctionWrappable(originalHandler) {\n    return new JFactoryFunctionWrappable(originalHandler).compose()\n}\n\nexport class JFactoryFunctionWrappable {\n\n    constructor(originalHandler) {\n        this.originalHandler = originalHandler;\n        this.composer = new JFactoryFunctionComposer;\n        this.composer.first(\"original\", helper_setFunctionName(\n            [originalHandler.name, \"[wrapped]\"].filter(Boolean).join(\" \"),\n            function(context) {\n                return originalHandler.apply(this, context.parameters);\n            })\n        );\n    }\n\n    compose() {\n        let composite = this.composer.compose(\"before\", \"original\", \"after\");\n        return Object.assign(composite, {\n            wrappable: this,\n            beforeAll: f => {this.beforeAll(f); return composite},\n            justBefore: f => {this.justBefore(f); return composite},\n            justAfter: f => {this.justAfter(f); return composite},\n            afterAll: f => {this.afterAll(f); return composite}\n        });\n    }\n\n    beforeAll(handler) {\n        this.composer.first(\"before\", handler);\n    }\n\n    justBefore(handler) {\n        this.composer.last(\"before\", handler);\n    }\n\n    justAfter(handler) {\n        this.composer.first(\"after\", handler);\n    }\n\n    afterAll(handler) {\n        this.composer.last(\"after\", handler);\n    }\n}"],"names":[],"mappings":"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"}