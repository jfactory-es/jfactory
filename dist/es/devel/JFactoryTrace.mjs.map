{"version":3,"file":"JFactoryTrace.mjs","sources":["../../../src/JFactoryTrace.mjs"],"sourcesContent":["import { JFACTORY_DEV } from \"./jFactory-env.mjs\";\nimport { JFACTORY_TRACE } from \"./jFactory-env.mjs\";\nimport { NOOP, helper_useragent } from \"./jFactory-helpers.mjs\";\nimport { jFactoryCfg } from \"./jFactory-env.mjs\";\nimport { jFactoryBootstrap_onBoot } from \"./jFactory-bootstrap.mjs\";\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryTrace 1.7\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta, HasSideEffects\n// ---------------------------------------------------------------------------------------------------------------------\n// - #limitation# Error.stack is not standardized\n// - #limitation# Error.stack is not source-mapped\n// - #limitation# bug https://bugzilla.mozilla.org/show_bug.cgi?id=1584244\n// - #limitation# StackTrace.js resolves sourcemaps. Unfortunately, it doesn't work with \"webpack:\" protocol\n//   see https://github.com/stacktracejs/stacktrace.js/issues/209\n// ---------------------------------------------------------------------------------------------------------------------\n// https://github.com/mozilla/source-map/\n// https://www.stacktracejs.com/\n// https://github.com/novocaine/sourcemapped-stacktrace\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryTrace {\n\n    constructor(omitAboveFunctionName = \"JFactoryTrace\", omitSelf = true, stackTraceLimit = Infinity) {\n        let _stackTraceLimit;\n        if (stackTraceLimit) {\n            _stackTraceLimit = Error.stackTraceLimit;\n            Error.stackTraceLimit = stackTraceLimit\n        }\n\n        this.source = new Error();\n        this.omitAboveFunctionName = omitAboveFunctionName;\n        this.omitSelf = omitSelf;\n\n        if (stackTraceLimit) {\n            Error.stackTraceLimit = _stackTraceLimit\n        }\n\n        this.init()\n    }\n\n    init() {\n        this.printable = this.source;\n        this.asyncPrintable = Promise.resolve(this.printable)\n    }\n\n    static createErrorFromStack(stack) {\n        let e = new Error();\n        e.name = \"JFactoryTrace\";\n        e.stack = stack;\n        return e\n    }\n}\n\nexport class JFactoryTrace_LIB_STACKTRACE extends JFactoryTrace {\n\n    init() {\n        let h = traceFrames => {\n            this.printable = this.constructor.createErrorFromStack(\n                this.createStackFromTraceFrames(\n                    this.filterTraceFrames(traceFrames)\n                )\n            )\n        }\n\n        h(StackTrace.getSync(this.source, config.libOptions));\n        if (config.useSourcemap) {\n            this.asyncPrintable = StackTrace.fromError(this.source, config.libOptions).then(h)\n        } else {\n            this.asyncPrintable = Promise.resolve(this.printable)\n        }\n    }\n\n    filterTraceFrames(traceFrames) {\n        if (this.omitAboveFunctionName) {\n            let slice = traceFrames.findIndex(\n                value => value.functionName && value.functionName.endsWith(this.omitAboveFunctionName)\n            );\n            if (slice > 0) {\n                if (this.omitSelf) {\n                    slice++\n                }\n                traceFrames = traceFrames.slice(slice);\n            }\n        }\n        return traceFrames\n    }\n\n    createStackFromTraceFrames(traceFrames) {\n        for (let formatter of Object.values(jFactoryTrace.formatters)) {\n            if (formatter.test()) {\n                return formatter.format(traceFrames)\n            }\n        }\n        return this.source.stack\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n// jFactoryTrace\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta\n// ---------------------------------------------------------------------------------------------------------------------\n\nlet tracer;\nif (JFACTORY_DEV && JFACTORY_TRACE) {\n\n    tracer = {\n\n        captureTraceSource(omitAboveFunctionName, omitSelf, stackTraceLimit) {\n            return new(config.tracer || JFactoryTrace)(omitAboveFunctionName, omitSelf, stackTraceLimit)\n        },\n\n        attachTrace(\n            targetObject, traceSource /* or omitAboveFunctionName */,\n            traceLogKey = config.keys[0], traceSourceKey = config.keys[1],\n            label = config.label\n        ) {\n            if (typeof traceSource !== \"object\") {\n                traceSource = this.captureTraceSource(traceSource || \"attachTrace\", !traceSource);\n            }\n\n            let log = () => console.log(traceSource.printable) || label || \"The stack has been printed in the console\";\n\n            Object.defineProperty(targetObject, traceLogKey, {\n                // hide the function body to improve readability in devtool\n                get: () => log()\n            });\n\n            Object.defineProperty(targetObject, traceSourceKey, {\n                value: traceSource\n            });\n        },\n\n        formatters: {\n\n            webkit: {\n                test() {\n                    return helper_useragent(\"Chrome\")\n                },\n                format(traceFrames) {\n                    // Chrome syntax\n                    // String must start with \"Error\" and parenthesis are important\n                    // => The console will convert the uri using sourcemaps\n                    return \"Error (generated by JFactoryTrace)\\n\" +\n                        traceFrames.map(sf => {\n                            let s = \"\\tat \";\n                            let uri = sf.fileName + \":\" + sf.lineNumber + \":\" + sf.columnNumber;\n                            if (sf.functionName) {\n                                s += sf.functionName + \" (\" + uri + \")\"\n                            } else {\n                                s += uri // no parenthesis\n                            }\n                            return s\n                        }).join(\"\\n\");\n                }\n            },\n\n            firefox: {\n                test() {\n                    return helper_useragent(\"Gecko\")\n                },\n                format(traceFrames) {\n                    // Firefox syntax\n                    return traceFrames.map(sf =>\n                        (sf.functionName ?? \"<anonymous>\")\n                            + \"@\" + sf.fileName + \":\" + sf.lineNumber + \":\" + sf.columnNumber\n                    ).join(\"\\n\");\n                }\n            }\n        }\n    }\n\n} else {\n\n    tracer = {\n        captureTraceSource: NOOP,\n        attachTrace: NOOP\n    };\n\n}\n\nexport const jFactoryTrace = tracer;\n\n// ---------------------------------------------------------------------------------------------------------------------\n// Config\n// ---------------------------------------------------------------------------------------------------------------------\n\nconst config = jFactoryCfg(\"JFACTORY_CFG_JFactoryTrace\");\n\nif (JFACTORY_DEV && JFACTORY_TRACE) {\n    config.keys = [\"$dev_traceLog\", \"$dev_traceSource\"];\n    if (typeof StackTrace === \"object\") {\n        config.tracer = JFactoryTrace_LIB_STACKTRACE;\n        config.useSourcemap = false;\n    }\n    jFactoryBootstrap_onBoot(function() {\n        if (config.tracer === JFactoryTrace_LIB_STACKTRACE) {\n            console.log(\"JFactoryTrace: Stacktrace.js support enabled; performances will be affected\")\n        }\n    })\n}"],"names":[],"mappings":"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"}