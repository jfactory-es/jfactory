{"version":3,"file":"JFactoryTraits.mjs","sources":["../../../src/JFactoryTraits.mjs"],"sourcesContent":["import { JFACTORY_DEV, JFACTORY_LOG } from \"./jFactory-env.mjs\";\nimport { JFactoryExpect } from \"./JFactoryExpect.mjs\";\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryTraits\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryTraits {\n    /**\n     * @param {JFactoryCoreObject|Object} callerInstance\n     * @param {Class|Function} callerConstructor\n     * @param options\n     */\n    constructor(callerInstance, callerConstructor, options = {}) {\n        /**\n         * @type {JFactoryCoreObject}\n         */\n        this.callerInstance = callerInstance;\n\n        /**\n         * @type {Class|Function}\n         */\n        this.callerConstructor = callerConstructor;\n\n        /**\n         * @type {Object}\n         */\n        this.options = options;\n    }\n\n    use(trait, ...traitArgs) {\n        if (JFACTORY_DEV) {\n            JFactoryExpect(\"JFactoryTraits(trait)\", trait).typeFunction();\n        }\n\n        // callerConstructor is not always the callerInstance.constructor:\n        // The Trait can be injected in an inherited constructor from super() at call time\n        let { callerInstance, callerConstructor } = this;\n\n        // Detect improper duplication (can be a trait already called by a super class)\n        let cache = JFactoryTraits.CACHE.get(callerInstance);\n\n        if (cache) {\n            if (cache.has(trait)) {\n                if (JFACTORY_LOG) {\n                    console.warn(`${trait.name} already called on`, callerInstance);\n                }\n                return this;\n            } else {\n                cache.add(trait)\n            }\n        } else {\n            JFactoryTraits.CACHE.set(callerInstance, new WeakSet([trait]))\n        }\n\n        !callerConstructor.JFactoryTrait && (callerConstructor.JFactoryTrait = new WeakSet);\n\n        if (!callerConstructor.JFactoryTrait.has(trait)) {\n            callerConstructor.JFactoryTrait.add(trait);\n            this.export(trait.prototype, callerConstructor.prototype);\n            this.export(trait, callerConstructor, true);\n        }\n\n        // In a Trait.constructor(callerInstance, ...args) : this != callerInstance\n        // In a Trait.trait_constructor(...args) : this == callerInstance (traits is injected and available)\n\n        // Traits are injections. They are not dynamic inheritance.\n        // So the Trait.constructor() doesn't share the \"this\" keyword with its caller.\n\n        // #limitation# No way to bind an ES6 class constructor to an object\n        // => Implementer can define a \"trait_constructor()\" that is automatically bound to \"callerInstance\"\n        // and called after the native trait constructor().\n\n        // eslint-disable-next-line new-cap\n        let traitInstance = new trait(callerInstance, ...traitArgs);\n        if (traitInstance.trait_constructor) {\n            traitInstance.trait_constructor.apply(callerInstance, traitArgs)\n        }\n        return this\n    }\n\n    export(source, target, isStatic) {\n        let sourceDescriptor = Object.getOwnPropertyDescriptors(source);\n\n        for (let propertyName of Object.keys(sourceDescriptor)) {\n            let prefix = JFactoryTraits.getPrefix(propertyName);\n\n            if (JFactoryTraits.getTarget(propertyName, target, prefix)) {\n                let propertyDescriptor = sourceDescriptor[propertyName];\n                let parsed = (this.options.parser || JFactoryTraits.defaultParser)(\n                    propertyName, propertyDescriptor, source, target, isStatic\n                );\n                if (parsed) {\n                    ({ propertyName, propertyDescriptor } = parsed);\n                    Object.defineProperty(target, propertyName, propertyDescriptor);\n                }\n            }\n        }\n    }\n\n    static defaultParser(propertyName, propertyDescriptor, source, target, isStatic) {\n        let value = propertyDescriptor.value;\n\n        if (isStatic) {return null} // don't export static members\n\n        if (propertyName in target) { // skip existing properties\n            if (JFACTORY_LOG) {\n                console.warn(\n                    `${target.constructor.name}> skipping export of existing property \"${propertyName}\"`,\n                    value);\n            }\n            return null\n        }\n\n        if (typeof value === \"object\") { // prevent shared object exportation\n            if (JFACTORY_LOG) {\n                console.warn(\n                    `${target.constructor.name}> skipping export of shared object \"${propertyName}\"`,\n                    value);\n            }\n            return null;\n        }\n\n        return { propertyName, propertyDescriptor }\n    }\n\n    static getPrefix(key) {\n        let split = key.split(\"_\");\n        return split.length > 1 ? split[0] : null;\n    }\n\n    static getTarget(key, target, prefix) {\n        if (\n            JFactoryTraits.EXCLUDES.includes(key) ||\n            prefix === \"trait\"\n        ) {\n            return null\n        }\n\n        return target\n    }\n}\n\nJFactoryTraits.CACHE = new WeakMap;\nJFactoryTraits.EXCLUDES = [\"constructor\", \"prototype\", \"length\", \"size\"];"],"names":[],"mappings":"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"}