{"version":3,"file":"JFactoryError.mjs","sources":["../../../src/JFactoryError.mjs"],"sourcesContent":["import { helper_get, helper_isNative, helper_lowerFirst, helper_template } from \"./jFactory-helpers.mjs\";\nimport { jFactoryCfg } from \"./jFactory-env.mjs\";\nimport { jFactoryTrace } from \"./JFactoryTrace.mjs\";\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryError\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryError extends Error {\n    constructor(message = \"unspecified error\", data = null) {\n        data = Object.assign(Object.create(null), data);\n        message = JFactoryError.toPrintable(message, data);\n        super(message);\n        this.$data = Object.assign(Object.create(null), data);\n    }\n\n    toString() {\n        return this.message\n    }\n\n    * [Symbol.iterator]() {\n        yield this.message;\n        yield this.$data;\n    }\n\n    static getId(object) {\n        return object[config.keys.find(key => {\n            let val = helper_get(object, key);\n            return val || val === 0\n        })]\n    }\n\n    static toPrintableData(data) {\n        const templateData = {};\n        let nv;\n        for (let [key, val] of Object.entries(data)) {\n            switch (typeof val) {\n                case \"function\":\n                    val = val.name + \"()\";\n                    break;\n                case \"object\":\n                    if (val === null) {\n                        val = \"null\";\n                        break\n                    }\n                    if (val instanceof Error) {\n                        val = val.toString();\n                        break\n                    }\n                    if ((nv = JFactoryError.getId(val)) !== undefined) {\n                        val = '\"' + nv + '\"'\n                    } else {\n                        if (!helper_isNative(val.toString)) {\n                            val = val.toString()\n                        } else {\n                            try {\n                                nv = JSON.stringify(val);\n                                val = nv.length > config.jsonMax\n                                    ? nv.substring(0, config.jsonMax) + \"[...]\" : nv;\n                            } catch (e) {\n                                val = \"[object \" + val.constructor.name + \"]\"\n                            }\n                        }\n                    }\n                    break;\n                case \"string\":\n                    val = '\"' + val + '\"';\n                    break;\n                default:\n                    val = String(val)\n            }\n            templateData[key] = val\n        }\n        return templateData\n    }\n\n    static toPrintable(template, data) {\n        const templateMessage = [];\n        for (let part of template.split(\";\")) {\n            let placeholder;\n            let re = config.reg_placeholder\n            re.lastIndex = 0;\n            if ((placeholder = re.exec(part))) {\n                do {\n                    if (placeholder[1] && placeholder[1] in data) {\n                        templateMessage.push(part.trim());\n                        break\n                    }\n                } while ((placeholder = re.exec(part)) !== null)\n            } else {\n                templateMessage.push(part.trim());\n            }\n        }\n        return helper_lowerFirst(helper_template(templateMessage.join(\"; \"))(JFactoryError.toPrintableData(data)));\n    }\n\n    static factory(type, template) {\n        let ret = {\n            [type]: class extends JFactoryError {\n                constructor(data, traceSource) {\n                    super(template, data);\n                    jFactoryTrace.attachTrace(this.$data, traceSource);\n                }\n            }\n        }[type];\n\n        // Chrome automatically resolves sourcemap when logging errors\n        // but only if the error name starts with \"Error\"\n        ret.prototype.name = \"Error JFACTORY_ERR_\" + type;\n        return ret\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFACTORY_ERR_*\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta\n// ---------------------------------------------------------------------------------------------------------------------\n\nconst E = JFactoryError.factory;\n\n/* eslint-disable max-len */\nexport const JFACTORY_ERR_INVALID_VALUE = /*#__PURE__*/E(\"INVALID_VALUE\", \"invalid value for ${target}; Reason: ${reason}; Given: ${given}\");\nexport const JFACTORY_ERR_INVALID_CALL = /*#__PURE__*/E(\"INVALID_CALL\", \"invalid call ${target}; Reason: ${reason}; Owner: ${owner}\");\nexport const JFACTORY_ERR_PROMISE_EXPIRED = /*#__PURE__*/E(\"PROMISE_EXPIRED\", \"expired promise ${target}; Reason: ${reason}\");\nexport const JFACTORY_ERR_REQUEST_ERROR = /*#__PURE__*/E(\"REQUEST_ERROR\", \"error requesting ${target}; Reason: ${reason}; Owner: ${owner}\");\nexport const JFACTORY_ERR_KEY_DUPLICATED = /*#__PURE__*/E(\"KEY_DUPLICATED\", \"duplicated key for ${target}; Given: ${given}\");\nexport const JFACTORY_ERR_KEY_MISSING = /*#__PURE__*/E(\"KEY_MISSING\", \"missing key for ${target}; Given: ${given}\");\n\n// ---------------------------------------------------------------------------------------------------------------------\n// Config\n// ---------------------------------------------------------------------------------------------------------------------\n\nconst config = jFactoryCfg(\"JFACTORY_CFG_JFactoryError\", {\n    reg_placeholder: /\\${([^}]+)}/g,\n    jsonMax: 40,\n    keys: [\"$.about.name\", \"$dev_name\", \"$name\", \"name\", \"id\"]\n})"],"names":[],"mappings":"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"}