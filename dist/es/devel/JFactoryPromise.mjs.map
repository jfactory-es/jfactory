{"version":3,"file":"JFactoryPromise.mjs","sources":["../../../src/JFactoryPromise.mjs"],"sourcesContent":["import { JFACTORY_DEV } from \"./jFactory-env.mjs\";\nimport { JFACTORY_ERR_INVALID_CALL, JFACTORY_ERR_PROMISE_EXPIRED } from \"./JFactoryError.mjs\";\nimport { JFactoryExpect } from \"./JFactoryExpect.mjs\";\nimport { jFactoryTrace } from \"./JFactoryTrace.mjs\";\nimport { helper_isNative } from \"./jFactory-helpers.mjs\";\nimport { helper_deferred } from \"./jFactory-helpers.mjs\";\nimport { jFactoryBootstrap_expected } from \"./jFactory-bootstrap.mjs\";\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryPromise 1.7\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta\n// ---------------------------------------------------------------------------------------------------------------------\n\n// #limitation# async functions always use the native Promise constructor even if native Promise class is overridden\n// #limitation# async functions always returns a native Promise even if returning an extended Promise\n// #limitation# async functions always returns a pending Promise even if returning a resolved Promise\n\nconst moduleGenId = () => ++moduleGenId.uid; moduleGenId.uid = 0;\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryPromise\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryPromise extends Promise {\n\n    constructor({ name, config, traceSource }, executor) {\n        JFACTORY_DEV && jFactoryBootstrap_expected();\n\n        if (arguments.length === 1) {\n            [name, config, executor] = [null, null, arguments[0]]\n        }\n\n        const chainId = moduleGenId();\n        config = { ...JFactoryPromise.DEFAULT_CONFIG, ...config };\n        name = name || \"unnamed\";\n\n        if (JFACTORY_DEV) {\n            JFactoryExpect(\"name\", name)\n                .type(String, Number)\n                .matchReg(/^[^. ]+$/);\n            JFactoryExpect(\"config\", config).typePlainObject();\n            JFactoryExpect(\"executor\", executor).typeFunction();\n        }\n\n        let resolve;\n        let reject;\n\n        super((_resolve, _reject) => {\n            resolve = _resolve;\n            reject = _reject;\n        });\n\n        const chain = new JFactoryPromiseChain(this, chainId, name, config);\n\n        Object.defineProperties(this, {\n            $chain: {\n                enumerable: true,\n                writable: true,\n                value: chain\n            },\n            $type: {\n                writable: true,\n                value: \"promise\"\n            },\n            $value: {\n                writable: true,\n                value: undefined\n            },\n            $isSettled: {\n                writable: true,\n                value: false\n            },\n            $isRejected: {\n                writable: true,\n                value: null\n            },\n            $isFulfilled: {\n                writable: true,\n                value: null\n            },\n            $isExpired: {\n                writable: true,\n                value: false\n            },\n            $isAborted: {\n                writable: true,\n                value: false\n            }\n        });\n\n        if (JFACTORY_DEV) {\n            Object.defineProperties(this, {\n                $dev_name: {\n                    configurable: true,\n                    value: name + \"[\" + chainId + \":0]\"\n                },\n                $dev_path: {\n                    writable: true,\n                    value: new JFactoryPromisePath(this)\n                },\n                $dev_position: {\n                    writable: true,\n                    value: 0\n                }\n            });\n            if (!helper_isNative(executor)) {\n                Object.defineProperties(this, {\n                    $dev_source: {\n                        value: executor\n                    }\n                });\n            }\n            jFactoryTrace.attachTrace(this, traceSource);\n        }\n\n        const tryAutoComplete = () => {\n            if (!this.$chain.isPending) {\n                try {\n                    this.$chainComplete(\"auto-completed\");\n                } catch (e) {\n                    // Case of error in \"complete\" callback\n                    // We catch the exception because the promise is already fulfilled\n                    // Furthermore this issue must be handled by the chain, not the current promise\n                    console.error(e) // print the error otherwise nothing happens\n                }\n            }\n        };\n\n        const onResolve = value => {\n            // console.trace(\"onResolve\", this.$dev_name);\n            if (!this.$isSettled) {\n                // 2.3.1. If promise and x refer to the same object, reject promise with a TypeError as the reason.\n                if (value === this) {\n                    onReject(new TypeError(\"Chaining cycle detected for promise \" + this.$dev_name));\n                    return;\n                }\n\n                let then;\n                if (value !== null && (typeof value == \"object\" || typeof value == \"function\")) {\n                    // 2.3.3.2. If retrieving the property x.then results in a thrown exception e,\n                    // reject promise with e as the reason.\n                    try {\n                        then = value.then;\n                    } catch (e) {\n                        onReject(e);\n                        return;\n                    }\n                }\n\n                if (typeof then == \"function\") {\n                    let called = false;\n                    let resolvePromise = function(y) {\n                        // 2.3.3.3.1. If/when resolvePromise is called with a value y, run [[Resolve]](promise, y).\n                        if (!called) {\n                            called = true;\n                            onResolve(y);\n                        }\n                    };\n                    let rejectPromise = function(r) {\n                        // 2.3.3.3.2. If/when rejectPromise is called with a reason r, reject promise with r.\n                        if (!called) {\n                            called = true;\n                            onReject(r);\n                        }\n                    };\n\n                    try {\n                        // 2.3.3.3: If `then` is a function, call it as x.then(resolvePromise, rejectPromise)\n                        then.call(value, resolvePromise, rejectPromise);\n                    } catch (e) { // 2.3.3.3.4. If calling then throws an exception e,\n                        // 2.3.3.3.4.1. If resolvePromise or rejectPromise have been called, ignore it.\n                        if (!called) {\n                            // 2.3.3.3.4.2. Otherwise, reject promise with e as the reason.\n                            onReject(e);\n                        }\n                    }\n                }\n                else {\n                    this.$isRejected = false;\n                    this.$isFulfilled = true;\n                    if (this.$isExpired) {\n                        value = this.$chain.errorExpired;\n                    }\n                    resolve(value);\n                    onSettle(value)\n                }\n            }\n        };\n\n        const onReject = reason => {\n            // console.log(\"onReject\", this.$dev_name);\n            if (!this.$isSettled) {\n                this.$isRejected = true;\n                this.$isFulfilled = false;\n                reject(reason);\n                onSettle(reason)\n            }\n        };\n\n        const onSettle = value => {\n            this.$value = value;\n            this.$isSettled = true;\n            this.$chain.chainMap.set(this, true);\n\n            if (this.$chain.chainConfig.chainAutoComplete) {\n                if (this.$chain.chainMap.size === 1 && !this.$isExpired) {\n                    // ensures that tryAutoComplete() will be called asynchronously (then() callback is asynchronous)\n                    // case of promise.resolve(primitive), prevents following then() from being immediately locked\n                    this.then(tryAutoComplete)\n                } else {\n                    tryAutoComplete()\n                }\n            }\n        };\n\n        let _chainAutoComplete = config.chainAutoComplete;\n        Object.defineProperty(config, \"chainAutoComplete\", {\n            get: () => _chainAutoComplete,\n            set: value => {\n                if (_chainAutoComplete !== value) {\n                    _chainAutoComplete = value;\n                    if (value) {\n                        tryAutoComplete()\n                    }\n                }\n            }\n        });\n\n        chain.chainMap.set(this, false);\n\n        Object.defineProperties(this, {\n            __resolve__: {\n                value: onResolve\n            },\n            __reject__: {\n                value: onReject\n            }\n        });\n\n        try {\n            executor(onResolve, onReject);\n        } catch (e) {\n            // console.error(\"exception in executor\", this.$dev_name);\n            onReject(e)\n        }\n    }\n\n    then(onFulfilled, onRejected, forceType) {\n        let wrappedFulfilled;\n        let wrappedRejected;\n        let newPromise;\n\n        // Caution: \"await\" detection is not reliable.\n        // Passing native functions for both onFulfilled and onRejected will\n        // result to \"await\" type and may cause side effects\n        let type = forceType || (\n            helper_isNative(onFulfilled) && !onFulfilled.name.startsWith(\"bound \") &&\n            helper_isNative(onRejected) && !onRejected.name.startsWith(\"bound \")\n                ? \"await\" : onFulfilled === undefined ? \"catch\" : \"then\"\n        );\n\n        if (onFulfilled && typeof onFulfilled === \"function\") {\n            wrappedFulfilled = function(r) {\n                // \"await\" must always run the native handler\n                if (type === \"await\") {\n                    // SPEC: \"await\" throws the errorExpired if $isAborted is true.\n                    // Allows async function to try catch the awaited aborted promise\n                    // or, if not caught, breaks and ignore the rest of the async function.\n                    if (newPromise.$isAborted) {\n                        return onRejected(newPromise.$chain.errorExpired)\n                    } else {\n                        return onFulfilled(r)\n                    }\n                }\n                // otherwise don't call the handler if expired\n                if (!newPromise.$isExpired) {\n                    if (newPromise.$isSettled) {\n                        // eslint-disable-next-line no-debugger\n                        debugger\n                    }\n                    return onFulfilled(r)\n                }\n            }\n        }\n        if (onRejected && typeof onRejected === \"function\") {\n            wrappedRejected = function(r) {\n                if (newPromise.$isSettled) {\n                    // eslint-disable-next-line no-debugger\n                    debugger\n                }\n                return onRejected(r)\n            }\n        }\n\n        newPromise = Object.assign(super.then(wrappedFulfilled, wrappedRejected), this);\n        moduleGenId.uid--; // reverse because not a new chain\n        newPromise.$type = type;\n\n        Object.defineProperties(newPromise, {\n            __onFulfilled__: { value: onFulfilled },\n            __onRejected__: { value: onRejected }\n        });\n\n        if (JFACTORY_DEV) {\n            newPromise.$dev_position = this.$chain.chainMap.size;\n            let fNames = \"\";\n            if (onFulfilled && onFulfilled.name) {\n                fNames += onFulfilled.name\n            }\n            if (onRejected && onRejected.name) {\n                fNames += \",\" + onRejected.name\n            }\n            Object.defineProperties(newPromise, {\n                $dev_name: {\n                    value:\n                        this.$chain.chainName\n                        + \"[\"\n                        + this.$chain.chainId\n                        + \":\"\n                        + this.$dev_position\n                        + \"]\"\n                        + \".\"\n                        + newPromise.$type\n                        + (fNames ? \"(\" + fNames + \")\" : \"\")\n                        + \"[\"\n                        + newPromise.$chain.chainId\n                        + \":\"\n                        + newPromise.$dev_position\n                        + \"]\"\n                },\n                $dev_path: { value: new JFactoryPromisePath(this.$dev_path, newPromise) }\n            });\n        }\n\n        newPromise.$chain.chainMap.set(newPromise, false);\n\n        if (this.$isExpired) {\n            // case: p0.then(); chainAbort(); p1.then()\n            // => the new promise must be expired\n            // if parent promise is just expired, abort silently\n            // if parent promise is aborted, abort explicitly\n\n            // JFactoryPromise.setExpired(newPromise, true, !this.$isAborted, this.$chain.errorExpired);\n            JFactoryPromise.setExpired(newPromise, this.$isAborted, true);\n        }\n\n        return newPromise\n    }\n\n    static resolve(optionalArgs, value) {\n        // resolve()\n        // resolve(optionalArgs, value)\n        // resolve(value)\n\n        if (arguments.length === 1) {\n            [optionalArgs, value] = [{}, optionalArgs]\n        }\n        if (!optionalArgs) {\n            optionalArgs = {}\n        }\n        if (value instanceof this && arguments.length === 1) {\n            // Returns the promise as is (native spec)\n            // but only if no optionalArgs\n            return value\n        } else {\n            return new this(optionalArgs, function(resolve) {\n                resolve(value)\n            });\n        }\n    }\n\n    static reject(optionalArgs, reason) {\n        // reject()\n        // reject(optionalArgs, reason)\n        // reject(reason)\n\n        if (arguments.length === 1) {\n            [optionalArgs, reason] = [{}, optionalArgs]\n        }\n        if (!optionalArgs) {\n            optionalArgs = {}\n        }\n        return new this(optionalArgs, function(resolve, reject) {\n            reject(reason)\n        });\n    }\n\n    // $toPromise(rejectIfExpired = true) {\n    //     return new Promise((resolve, reject) => {\n    //         let promise = this.then(resolve, e => {\n    //             debugger\n    //             reject(e)\n    //         });\n    //         if (rejectIfExpired) {\n    //             promise.$thenIfExpired(reject)\n    //         }\n    //     })\n    // }\n\n    // $toNewChain(abortIfExpired = true) {\n    //     let newChain;\n    //     return newChain = new JFactoryPromise((resolve, reject) => {\n    //         let promise = this.then(resolve, e => {\n    //             debugger\n    //             reject(e)\n    //         });\n    //         if (abortIfExpired) {\n    //             promise.$thenIfExpired(function(e){\n    //                 newChain.$chainAbort(e)\n    //             })\n    //         }\n    //     });\n    // }\n\n    // A \"then\" where the handler is called only if the chain is expired\n    // it's not a catch (a catchExpired concept should cancel the expiration)\n    $thenIfExpired(onExpired) {\n        return this.then(r => this.$chain.chainRoot.$isExpired ? onExpired(r) : r,\n            undefined, \"$thenIfExpired\"\n        )\n    }\n\n    // Completes an expires the whole chain before its normal end\n    // Sets the $isAborted to true on aborted promises\n    $chainAbort(reason = \"$chainAbort()\") {\n        this.$chain.complete(reason, true);\n        return this\n    }\n\n    // Manually completes and expires the whole chain\n    // Only required if awaiting \"myPromise.$chain\"\n    // when the autocomplete watcher is not used\n    $chainComplete(reason = \"$chainComplete()\") {\n        if (this.$chain.isPending) {\n            throw new JFACTORY_ERR_INVALID_CALL({\n                target: this,\n                reason: \"Trying to complete a pending chain. Use $chainAbort() if you want to stop it.\"\n            });\n        }\n        this.$chain.complete(reason, false);\n        return this\n    }\n\n    $chainAutoComplete() {\n        this.$chain.chainConfig.chainAutoComplete = true;\n        return this\n    }\n\n    static setExpired(promise, abort, silent /*, reason*/) {\n        promise.$isExpired = true;\n        if (!promise.$isSettled) {\n            if (promise.$type === \"$thenIfExpired\") {\n                promise.__onFulfilled__(promise.$chain.chainRoot.$chain.errorExpired)\n            }\n            else if (abort) {\n                promise.$isAborted = true;\n            } else {\n                if (!silent) {\n                    throw new JFACTORY_ERR_INVALID_CALL({\n                        target: promise,\n                        reason: \"promise must be aborted or settled before setting it to expired.\"\n                    })\n                }\n            }\n            promise.__resolve__(/*reason*/);\n        }\n    }\n}\n\nJFactoryPromise.DEFAULT_CONFIG = {\n    chainAutoComplete: false\n};\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryPromiseChain\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryPromiseChain {\n\n    constructor(chainRoot, chainId, chainName, chainConfig) {\n        Object.defineProperties(this, {\n            chainConfig: { value: chainConfig },\n            chainRoot: { value: chainRoot },\n            chainId: { value: chainId },\n            chainName: { value: chainName },\n            chainMap: { value: new Map },\n            isCompleted: { value: false, configurable: true },\n            data: { value: {} },\n            __deferred__: { value: helper_deferred() }\n        })\n    }\n\n    get isPending() {\n        return Array.from(this.chainMap.values()).includes(false)\n    }\n\n    then(onResolve) { // => \"await chain\"\n        this.__deferred__.done(onResolve);\n        return this\n    }\n\n    complete(reason = \"chain.complete()\", abort) {\n        let chainRoot = this.chainRoot;\n        if (!chainRoot.$isExpired) {\n            /*let errorExpired = */chainRoot.$chain.errorExpired = new JFACTORY_ERR_PROMISE_EXPIRED({\n                target: chainRoot,\n                reason\n            });\n\n            let map = this.chainMap;\n            for (let item of map.keys()) {\n                JFactoryPromise.setExpired(item, abort/*, false, errorExpired*/);\n            }\n\n            Object.defineProperty(this, \"isCompleted\", { value: true });\n            this.__deferred__.resolve();\n        }\n        return this\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryPromisePath\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryPromisePath extends Array {\n\n    constructor() {\n        super();\n        for (let i of arguments) {\n            if (Array.isArray(i)) {\n                this.push(...i)\n            } else {\n                this.push(i)\n            }\n        }\n    }\n\n    get printable() {\n        return this.map((v, i) => i === 0 ? v.$dev_name : v.$dev_name.split(\".\")[1]).join(\".\")\n    }\n\n    toString() {return this.printable}\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n// JFactoryPromiseSync\n// ---------------------------------------------------------------------------------------------------------------------\n// Promise that tries to resolve synchronously\n// allowing synchronous states and result\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport class JFactoryPromiseSync extends Promise {\n\n    constructor(executor) {\n\n        let states = {\n            $isSettled: false, // true = not pending\n            $isRejected: null, // true = not pending + rejected\n            $value: undefined\n        };\n\n        super((resolve, reject) => {\n\n            let called = false;\n\n            let onResolve = r => {\n                if (r instanceof Promise) {\n                    JFactoryPromiseSync.resolve(r)\n                        .then(onResolve, onReject)\n                } else {\n                    if (!called) {\n                        called = true;\n                        states.$isSettled = true;\n                        states.$isRejected = false;\n                        states.$value = r;\n                        resolve(r)\n                    }\n                }\n            };\n\n            let onReject = r => {\n                // don't resolve pending promise\n                // to keep native specification\n                if (!called) {\n                    called = true;\n                    states.$isSettled = true;\n                    states.$isRejected = true;\n                    states.$value = r;\n                    reject(r)\n                }\n            };\n\n            try {\n                executor(onResolve, onReject)\n            } catch (e) {\n                onReject(e)\n            }\n        });\n\n        Object.assign(this, states);\n        states = this\n    }\n\n    then(onFulfilled, onRejected) {\n\n        if (this.$isSettled) {\n            let value = this.$value;\n\n            try {\n                if (this.$isRejected) {\n                    // cancel any uncaught rejected result from this promise\n                    // before returning the new one\n                    super.then(undefined, () => null);\n\n                    if (onRejected && typeof onRejected === \"function\") {\n                        value = onRejected(value)\n                    } else {\n                        return JFactoryPromiseSync.reject(value)\n                    }\n                } else {\n                    if (onFulfilled && typeof onFulfilled === \"function\") {\n                        value = onFulfilled(value)\n                    }\n                }\n            } catch (e) {\n                return JFactoryPromiseSync.reject(e)\n            }\n\n            return JFactoryPromiseSync.resolve(value)\n\n        } else {\n            return super.then(onFulfilled, onRejected)\n        }\n    }\n\n    static resolve(value) {\n        if (value instanceof JFactoryPromiseSync) {\n            return value\n        } else {\n            if (value instanceof Promise) {\n                return new JFactoryPromiseSync(value.then.bind(value))\n            } else {\n                return new JFactoryPromiseSync(r => r(value))\n            }\n        }\n    }\n}"],"names":[],"mappings":"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"}