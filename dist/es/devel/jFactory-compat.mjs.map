{"version":3,"file":"jFactory-compat.mjs","sources":["../../../src/jFactory-compat.mjs"],"sourcesContent":["// ---------------------------------------------------------------------------------------------------------------------\n// jFactoryCompat\n// ---------------------------------------------------------------------------------------------------------------------\n// Status: Beta\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport const JFACTORY_COMPAT_fetch = {\n    name: \"fetch\",\n    test: () => fetch,\n    info: \"https://developer.mozilla.org/docs/Web/API/Fetch_API/Using_Fetch\"\n}\nexport const JFACTORY_COMPAT_Request = {\n    name: \"Request\",\n    test: () => Request,\n    info: \"https://developer.mozilla.org/docs/Web/API/Request\"\n}\nexport const JFACTORY_COMPAT_AbortController = {\n    name: \"AbortController/AbortSignal\",\n    test: () => new AbortController().signal,\n    info: \"https://developer.mozilla.org/docs/Web/API/AbortController, \" +\n        \"https://developer.mozilla.org/docs/Web/API/AbortSignal\"\n}\nexport const JFACTORY_COMPAT_MutationObserver = {\n    name: \"MutationObserver\",\n    test: () => MutationObserver,\n    info: \"https://developer.mozilla.org/docs/Web/API/MutationObserver\"\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n\nlet deferred = {};\n\nexport function jFactoryCompat_require(...args) {\n    for (let compat of args) {\n        deferred[compat.name] = compat\n    }\n}\n\nexport function jFactoryCompat_run(entries = deferred) {\n    for (let entry of Object.values(entries)) {\n        let pass;\n        try {pass = Boolean(entry.test())} catch (ignore) {}\n        if (!pass) {\n            let msg = `jFactory may require the support of \"${entry.name}\", ${entry.info}`;\n            if (entry.strict) {\n                throw new Error(msg)\n            } else {\n                console.warn(msg)\n            }\n        }\n    }\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,qBAAqB,GAAG;AACrC,IAAI,IAAI,EAAE,OAAO;AACjB,IAAI,IAAI,EAAE,MAAM,KAAK;AACrB,IAAI,IAAI,EAAE,kEAAkE;AAC5E,EAAC;AACW,MAAC,uBAAuB,GAAG;AACvC,IAAI,IAAI,EAAE,SAAS;AACnB,IAAI,IAAI,EAAE,MAAM,OAAO;AACvB,IAAI,IAAI,EAAE,oDAAoD;AAC9D,EAAC;AACW,MAAC,+BAA+B,GAAG;AAC/C,IAAI,IAAI,EAAE,6BAA6B;AACvC,IAAI,IAAI,EAAE,MAAM,IAAI,eAAe,EAAE,CAAC,MAAM;AAC5C,IAAI,IAAI,EAAE,8DAA8D;AACxE,QAAQ,wDAAwD;AAChE,EAAC;AACW,MAAC,gCAAgC,GAAG;AAChD,IAAI,IAAI,EAAE,kBAAkB;AAC5B,IAAI,IAAI,EAAE,MAAM,gBAAgB;AAChC,IAAI,IAAI,EAAE,6DAA6D;AACvE,EAAC;AACD;AACA;AACA;AACA,IAAI,QAAQ,GAAG,EAAE,CAAC;AAClB;AACO,SAAS,sBAAsB,CAAC,GAAG,IAAI,EAAE;AAChD,IAAI,KAAK,IAAI,MAAM,IAAI,IAAI,EAAE;AAC7B,QAAQ,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,OAAM;AACtC,KAAK;AACL,CAAC;AACD;AACO,SAAS,kBAAkB,CAAC,OAAO,GAAG,QAAQ,EAAE;AACvD,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;AAC9C,QAAQ,IAAI,IAAI,CAAC;AACjB,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC,OAAO,MAAM,EAAE,EAAE;AAC5D,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,IAAI,GAAG,GAAG,CAAC,qCAAqC,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3F,YAAY,IAAI,KAAK,CAAC,MAAM,EAAE;AAC9B,gBAAgB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC;AACpC,aAAa,MAAM;AACnB,gBAAgB,OAAO,CAAC,IAAI,CAAC,GAAG,EAAC;AACjC,aAAa;AACb,SAAS;AACT,KAAK;AACL;;;;"}